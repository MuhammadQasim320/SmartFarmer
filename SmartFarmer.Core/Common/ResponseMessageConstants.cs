namespace SmartFarmer.Core.Common
{
    public class ResponseMessageConstants
    {
        public static readonly string LoginFailed = "Invalid email or password! Please check and try again.";
        public static readonly string LoginAccessFailed = "You have no access for this portal";
        public static readonly string PasswordIncorrectError = "The password that you've entered is incorrect";
        public static readonly string PasswordRemoveError = "Something went wrong, Password not removed";
        public static readonly string UserExistanceError = "User does not exists";
        public static readonly string UserTypeExistanceError = "User Type against Id does not exists";
        public static readonly string TrainingTypeExistanceError = "Training Type against Id does not exists";
        public static readonly string TrainingFilterIdExistanceError = "Training Filter against this Id does not exists";
        public static readonly string UserStatusExistanceError = "User Status Id does not exists";
        public static readonly string EmailIncorrectError = "The email is not associated with any account";
        public static readonly string UserNameIncorrectError = "User name does not exist";
        public static readonly string LoginSuccess = "User Login Successfully.";
        public static readonly string UserRoleNotAuthorized = "Only Operator or Both can log in.";
        public static readonly string AccountCreationSucess = "User Sign Up Successfully.";
        public static readonly string UserCreationSucess = "User Created Successfully";
        public static readonly string OperatorAccountCreationSucess = "Operator Sign Up Successfully.";
        public static readonly string AccountCreationFail = "Account creation failed!.";
        public static readonly string RecordGetSuccess = "Record retrieved successfully";
        public static readonly string UnassignOperatortoTrainingError = "Operator is not assigned to this Training Record";
        public static readonly string RecordGetUnSuccess = "Record Not Found";
        public static readonly string RecordAddSuccess = "Record added Successfully!";
        public static readonly string RecordAddError = "Record does not add Successfully!";
        public static readonly string UserGroupIdIncorrectError = "UserGroupId does not Exist!";
        public static readonly string GroupAssignedToWelfareRoutineError = "Group is already assigned to a WelfareRoutine!";
        public static readonly string OperatorIdIncorrectError = "OperatorId does not Exist!";
        public static readonly string OperatorStatusIdIncorrectError = "OperatorStatusId does not Exist!";
        public static readonly string SmartCourseExistenceError = "Smart Course against this Id does not exist";
        public static readonly string RiskAssessmentExistenceError = "Risk Assessment against this Id does not exist";
        public static readonly string RiskAssessmentLogExistenceError = "Risk Assessment Log against this Id does not exist";
        public static readonly string MachineTypeExistenceError = "Machine Type against this Id does not exist";
        public static readonly string MachineStatusExistenceError = "Machine Status against this Id does not exist";
        public static readonly string CheckTypeExistenceError = "Check Type against this Id does not exist";
        public static readonly string CheckListExistenceError = "Check List against this Id does not exist";
        public static readonly string CheckListItemExistenceError = "Check List Item against this Id does not exist";
        public static readonly string CheckListItemError = "CheckListItem is use and cannot be deleted";
        public static readonly string FrequencyTypeExistenceError = "Frequency Type against this Id does not exist";
        public static readonly string InitialRiskExistenceError = "Initial Risk against this Id does not exist";
        public static readonly string InitialRiskAndAdjustedRiskExistenceError = "Initial Risk And Adjusted Risk against this Id does not exist";
        public static readonly string AdjustedRiskExistenceError = "Adjusted Risk against this Id does not exist";
        public static readonly string ActionExistenceError = "Action against this Id does not exist";
        public static readonly string UnitsTypeExistenceError = "Units Type against this Id does not exist";
        public static readonly string TrainingExistenceError = "Training against this Id does not exist";
        public static readonly string AlarmActionExistenceError = "AlarmAction against this Id does not exist";
        public static readonly string MobileActionTypeExistenceError = "MobileActionType against this Id does not exist";
        public static readonly string TrainingRecordExistError = "TrainingRecord against this Id does not exist";
        public static readonly string TrainingFileExistenceError = "Training File against this Id does not exist";
        public static readonly string RiskAssessmentFileExistenceError = "RiskAssessment File against this Id does not exist";
        public static readonly string RecordUpdateSuccess = "Record updated successfully!";
        public static readonly string MachineUsageUpdateSuccess = "Usage was updated!";
        public static readonly string RecordUnassignSuccess = "Record Unassigned successfully!";
        public static readonly string RecordUpdateUnSuccessfull = "Record updated unsuccessfully!";
        public static readonly string FileUploadSuccessfull = "File Uploaded successfully!";
        public static readonly string FileUploadUnSuccessfull = "File Upload unsuccessfull!";
        public static readonly string FileDeleteSuccessfull = "File Deleted successfully!";
        public static readonly string FileDeleteUnSuccessfull = "File Deleted unsuccessfully!";
        public static readonly string PasswordChangeError = "Password not updated!";
        public static readonly string WelfareRoutineExistanceError = "Welfare Routine does not exist!";
        public static readonly string IssueCategoryExistanceError = "Issue Category does not exist!";
        public static readonly string IssueCategoryInUseError = "Issue Category in use and cannot be deleted!";
        public static readonly string IssueExistanceError = "Issue does not exist!";
        public static readonly string IssueFileExistanceError = "IssueFile does not exist!";
        public static readonly string ResolvedByUserExistanceError = "Resolvedby user does not exist!";
        public static readonly string IssueTypeExistanceError = "Issue Type does not exist!";
        public static readonly string IssueStatusExistanceError = "Issue Status does not exist!";
        public static readonly string EventExistanceError = "Event does not exist!";
        public static readonly string EventTypeExistanceError = "Event Type does not exist!";
        public static readonly string MachineExistanceError = "Machine does not exist!";
        public static readonly string ResultExistanceError = "Result does not exist!";
        public static readonly string MachineCategoryExistanceError = "Machine Category does not exist!";
        public static readonly string MachineCategoryAssignError = "Machine Category is in use!";
        public static readonly string MachineStatusExistanceError = "Machine Status does not exist!";
        public static readonly string RecordDeleteSuccess = "Record delete successfully";
        public static readonly string FieldExistanceError = "Field does not exist!";
        public static readonly string FieldAssignError = "Field is in use";
        public static readonly string FieldDeleteError = "Field is use and cannot be deleted";
        public static readonly string HazardKeyFieldDeleteError = "HazardKeyField is use and cannot be deleted";
        public static readonly string FarmExistanceError = "Farm does not exist!";
        public static readonly string ActiveOperatingMachinesError = "User has active machines, stop operating first!";
        public static readonly string ClockOutError = "User needs to clockout first!";
        public static readonly string ApplicationUserTypeIdError = "You cannot add this ApplicationUserTypeId!";
        public static readonly string FallDetectionSuccess = " Fall Detected Successfully";
        public static readonly string FallDetectionError = "Fall Detected failed"; 
        public static readonly string CheckInSuccess = " Check In Successful";
        public static readonly string CheckInError = "Check In failed"; 
        public static readonly string SOSSuccess = " SOS Set Successfully";
        public static readonly string SOSError = "SOS Set failed";
        public static readonly string OperatorOperatingLimitExcedes = "Operator's operating limit excedes, cannot operate more than three machines at a time.";
        public static readonly string UserGroupUserDeleteUnSuccessfull = "UserGroup is assigned to User";
        public static readonly string UserGroupWelfareRoutineDeleteUnSuccessfull = "UserGroup is assigned to WelfareRoutine";
        public static readonly string QuestionExistenceError = "Question against this Id does not exist";
        public static readonly string AnswerCorrectError = "Only one correct answer is allowed.";
        public static readonly string TrainingRecordExistenceError = "TrainingRecord against this Id does not exist";
        public static readonly string TrainingRecordOperatorExistanceError = "Operator already assigned to this TrainingRecords.";
        public static readonly string TrainingOperatorExistanceError = "Operator already assigned to this Training.";
        public static readonly string TrainingTypeIdError = "You cannot add this TrainingTypeId!";
        public static readonly string HazardTypeExistenceError = "HazardType does not exist!";
        public static readonly string HazardKeyExistenceError = "HazardKey does not exist!";
        public static readonly string HazardKeyDeleteError = "HazardKey is use and cannot be deleted";
        public static readonly string HazardKeyFieldMappingExistError = "hazardKeyFieldMapping against this Id does not exist!";
        public static readonly string OperatorAnswerIncorrect = "Operator Answer is Not Correct";
        public static readonly string UserTypeIncorrect = "UserType must be Operator or Both";
        public static readonly string SecurityKeyBadRequest = "security Key does not match, Bad Request Please  Check details and try again.";
        public static readonly string MappingUpdateSuccess = "Mapping updated successfully.";
        public static readonly string MappingCreateSuccess = "Mapping created successfully.";
        public static readonly string EmailExistanceError = "Email does not exists!";
        public static readonly string EmailExistanceInSameFarmError = "Email exists in the same farm already!";
        public static readonly string MachineOperatingError = "An error has occurred, possibly due to a machine issue or the operator exceeding the operational limits.";
        public static readonly string MasterAdminExistenceError = "MasterAdmin are not exist.";
        public static readonly string FarmSwitchUnsucessful = "User does not have permission to switch to this farm.";
        public static readonly string FarmSwitchSucessfully = "Farm Switch Sucessfully.";
        public static readonly string ImageUploadUnSuccessful = "Image Updoad UnSuccessful.";
        public static readonly string ImageCountError = "Atleast one image should be uploaded.";


    }
}
